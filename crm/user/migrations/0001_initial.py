# Generated by Django 2.0.7 on 2018-08-11 22:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('position', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=20)),
                ('middle_name', models.CharField(blank=True, max_length=20)),
                ('last_name', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('phone_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message="Номер должен быть в формате '9633609225'", regex='^\\+?1?\\d{10}$')], verbose_name='Номер мобильного телефона')),
                ('extra_phone_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message="Номер должен быть в формате '9633609225'", regex='^\\+?1?\\d{10}$')], verbose_name='Дополнительный номер')),
                ('other_contacts', models.CharField(blank=True, max_length=200, verbose_name='Дополнительные контакты')),
                ('timezone', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Часовой пояс')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный аккаунт')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Статус персонала')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Статус администратора')),
                ('status', models.CharField(choices=[('А', 'Активный'), ('Б', 'Болен'), ('К', 'Командировка'), ('О', 'Отпуск'), ('У', 'Уволен')], default='A', max_length=2, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('user_position', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_position', to='position.Position', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
